{"version":3,"sources":["utils/FirebaseConfig.ts","utils/FirebaseUtils.ts","components/login/Login.tsx","components/event_edit/EventEdit.tsx","components/modal/Modal.tsx","utils/CryptoUtils.ts","utils/QRUtils.ts","components/qr/QR.tsx","components/event_view/EventView.tsx","components/events_record/EventsRecord.tsx","App.tsx","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseUtils","getFirebaseApp","window","firebase","apps","length","initializeApp","initialize_auth","callback","app","auth","setPersistence","Auth","Persistence","SESSION","onAuthStateChanged","user","getUser","currentUser","displayName","email","isValidTeamMember","a","sessionStorage","getItem","getPageData","setItem","page","output","db","firestore","collection","doc","get","data","login","onFail","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","alert","logout","signOut","removeItem","saveChanges","currentPage","page_data","set","Login","props","state","onLogin","setState","isLoggedIn","showMsg","msg","isValidUser","onLoginSuccess","showMessage","message","onLogOut","this","style","display","flexDirection","justifyContent","alignItems","height","width","className","alt","src","homepage","label","onClick","React","Component","EventEdit","onSubmit","name","date","url","eventkey","defaultId","defaultName","defaultDate","defaultUrl","defaultKey","id","rows","defaultValue","isReadonly","border","readOnly","onChange","event","target","value","buttonText","Modal","children","Crypto","password","key","encoder","decoder","_getKey","_getKeyFromPassword","hash","iterations","salt","crypto","subtle","importKey","_stringToArrayBuffer","baseKey","deriveKey","aesKey","TextEncoder","encode","_ArrayBufferTostring","buffer","TextDecoder","decode","encrypt","iv","Uint8Array","enc_msg","toString","replaceAll","decrypt","_Uint8stringToArrayBuffer","dec_msg","enc_str","split","map","each","Number","QRUtils","_getEventType","formUrl","includes","getQRPayload","eventName","type","url_components","urlRegExpResult","RegExp","exec","replace","ts","bags","i","component","payLoad","JSON","stringify","QR","callbackID","refreshQR","datetime","Date","cipher","toLocaleString","signature","QRpayload","isLoading","qrvalue","time","setInterval","clearInterval","level","marginLeft","EventView","toggleModalState","showInfo","isEditable","showQR","toggleModalEditState","onEdit","eventId","toggleShowQR","history","replaceState","URL","location","href","searchParams","delete","query_params","search","eventKey","color","size","EventsRecord","onCreate","newEvent","events","unshift","createNew","index","newEvents","val","parse","getRandomKey","uuidv4","getNewId","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","toggleCreateNew","body","details","alignSelf","marginRight","marginTop","App","onLoggedIn","isValidUserLoggedIn","onLoggedOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.77331841.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: \"AIzaSyBe7MCEn-_5jNAd286deOqEk8jvxvNX1aw\",\r\n    authDomain: \"nss-iith-app.firebaseapp.com\",\r\n    projectId: \"nss-iith-app\",\r\n    storageBucket: \"nss-iith-app.appspot.com\",\r\n    messagingSenderId: \"406717518600\",\r\n    appId: \"1:406717518600:web:169bf354467b164f03d2bd\",\r\n    measurementId: \"G-L793C8VNSX\"\r\n};\r\n\r\nexport default firebaseConfig;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport firebaseConfig from \"./FirebaseConfig\";\r\n\r\nexport class FirebaseUtils {\r\n\r\n    private static getFirebaseApp = () => {\r\n        if(typeof window !== 'undefined'){\r\n            return firebase.apps.length ? firebase.apps[0] : firebase.initializeApp(firebaseConfig); \r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static initialize_auth = (callback: Function) => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        app?.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n        app?.auth().onAuthStateChanged((user: any) => {\r\n            if(user){\r\n                callback();\r\n            }\r\n        })\r\n    }\r\n\r\n    public static getUser = () => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        return {\"name\": app?.auth().currentUser?.displayName, \"email\": app?.auth().currentUser?.email};\r\n    }\r\n\r\n    public static isValidTeamMember = async ():Promise<boolean> => {\r\n        if (sessionStorage.getItem(\"isValidUserLoggedIn\") != null){\r\n            return true;\r\n        }\r\n        else{\r\n            try{\r\n                const result = await FirebaseUtils.getPageData(\"access_list\");\r\n                if(result !== {}){\r\n                    sessionStorage.setItem(\"isValidUserLoggedIn\" , \"True\");\r\n                    return true;\r\n                }\r\n            }\r\n            catch{\r\n                return false;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public static getPageData = async (page: string):Promise<any> => {\r\n        let output: any = {};\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        const db = app?.firestore().collection(\"event_records\");\r\n        const data = await db?.doc(page).get();\r\n        output = (data) ? data.data() : {};\r\n        return output;\r\n    }\r\n\r\n    public static login = (callback:()=>void, onFail:()=>void) => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        let provider = new firebase.auth.GoogleAuthProvider();\r\n        app?.auth().signInWithPopup(provider).then(function(result: any) {\r\n            callback();\r\n        }).catch(function(error: any) {\r\n            alert(error);\r\n            onFail();\r\n        });\r\n    }\r\n\r\n    public static logout = (callback:()=>void) => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        app?.auth().signOut().then(function(result: any){\r\n            sessionStorage.removeItem(\"isValidUserLoggedIn\");\r\n            callback();\r\n        }).catch(function(error: any){alert(\"Oops... failed to logout\")});\r\n    }\r\n\r\n    public static saveChanges = (currentPage:string, page_data:Object) => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        app?.firestore().collection('event_records').doc(currentPage).set(page_data).then(function(result: any){\r\n            alert(\"Sucessfully saved to database. Thank you!\");\r\n        }).catch(function(error: any){\r\n            alert(\"Oops... Sorry, unable to save changes. This might have happened because, \\n i) You may not have the edit access to the data \\n ii) You may not have a stable network\");\r\n        })\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport GoogleButton from 'react-google-button'\r\nimport { FirebaseUtils } from \"../../utils/FirebaseUtils\";\r\nimport \"./Login.css\";\r\nimport {homepage} from \"../../../package.json\";\r\n\r\ninterface LoginState{\r\n    isLoggedIn: boolean,\r\n    isValidUser: boolean,\r\n    showMsg: boolean;\r\n    msg: string;\r\n}\r\n\r\ninterface LoginProps{\r\n    onLoginSuccess: Function;\r\n    onLogOut: Function;\r\n}\r\n\r\nclass Login extends React.Component<LoginProps,LoginState>{\r\n    constructor(props: LoginProps, state: LoginState){\r\n        super(props,state);\r\n        FirebaseUtils.initialize_auth(this.onLogin);\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            isValidUser: false,\r\n            showMsg: false,\r\n            msg: \"Currently logged in as \" + FirebaseUtils.getUser().email + \". Verifying access level, Please wait!\"\r\n        }\r\n    }\r\n\r\n    onLogin = async () => {\r\n        const user = FirebaseUtils.getUser().email;\r\n        this.setState({\r\n            isLoggedIn: true,\r\n            showMsg: true,\r\n            msg: \"Verifying user \" + user + \"... Please wait...\"\r\n        });\r\n        const result = await FirebaseUtils.isValidTeamMember();\r\n        if(result){\r\n            this.setState({\r\n                isValidUser: true,\r\n                showMsg: true,\r\n                msg: \"Login and verification success! Please wait...\"\r\n            });\r\n            this.props.onLoginSuccess();\r\n        }\r\n        else{\r\n            this.showMessage(\"Sorry... You do not have access to this page!\");\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(this.state.isLoggedIn && !this.state.isValidUser){\r\n            this.onLogin();\r\n        }\r\n    }\r\n\r\n    showMessage = (message: string) => {\r\n        this.setState({\r\n            showMsg: true,\r\n            msg: message\r\n        });\r\n    }\r\n\r\n    logout = async () => {\r\n        this.showMessage(\"Please wait...\");\r\n        FirebaseUtils.logout(() => {\r\n            this.setState({\r\n                isLoggedIn: false,\r\n                isValidUser: false,\r\n                showMsg: true,\r\n                msg: \"Logged out!\"\r\n            });\r\n            this.props.onLogOut();\r\n        });\r\n    }\r\n\r\n    login = async () => {\r\n        FirebaseUtils.login(\r\n            async () => {\r\n                this.onLogin();\r\n            },\r\n            () => {\r\n                this.showMessage(\"Oops... login failed. Please check your network connection\")\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\",height:\"100vh\", width:\"100%\"}}>\r\n                <div className=\"loginComponent\">\r\n                    <img alt=\"NSS IITH Logo\" src={homepage+\"/bannerNSS.jpg\"} style={{width: 300}}/>\r\n                    <p className=\"loginTitle\">QR Generator</p>\r\n                    {this.state.isLoggedIn ? <GoogleButton label=\"Log out\" onClick={this.logout}/> : <GoogleButton onClick={this.login}/>}\r\n                    {this.state.showMsg ? <p className=\"loginErrorMsg\">{this.state.msg}</p> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport \"./EventEdit.css\"\r\n\r\ninterface EventEditProps{\r\n    defaultName: string;\r\n    defaultUrl: string;\r\n    defaultDate: string;\r\n    defaultKey: string;\r\n    defaultId: string;\r\n    buttonText: string;\r\n    onSubmit: Function;\r\n    isReadonly: boolean;\r\n}\r\n\r\ninterface EventEditState{\r\n    name: string;\r\n    url: string;\r\n    date: string;\r\n    eventkey: string;\r\n    showMsg: boolean;\r\n}\r\n\r\nclass EventEdit extends React.Component<EventEditProps, EventEditState>{\r\n    constructor(props: EventEditProps, state: EventEditState){\r\n        super(props, state);\r\n        this.state = {\r\n            name: this.props.defaultName,\r\n            date: this.props.defaultDate,\r\n            url: this.props.defaultUrl,\r\n            eventkey: this.props.defaultKey,\r\n            showMsg: false\r\n        }\r\n    }\r\n\r\n    onSubmit = () => {\r\n        if (this.state.name !== \"\" && this.state.date !== \"\" && this.state.url !== \"\" && this.state.eventkey !== \"\"){\r\n            this.setState({\r\n                showMsg: false\r\n            });\r\n            this.props.onSubmit(this.state.name, this.state.date, this.state.url, this.state.eventkey, this.props.defaultId);\r\n        }\r\n        else{\r\n            this.setState({\r\n                showMsg: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"eventEditModal\" id={this.props.defaultKey}>\r\n                <div className=\"eventEditModalLabel\">Event Name:</div>\r\n                <textarea id=\"inputname\" className=\"eventEditModalInput\" \r\n                    rows={1} defaultValue={this.props.defaultName} \r\n                    style={this.props.isReadonly ? {border:\"2px solid darkgrey\"}:{border:\"2px solid grey\"}} \r\n                    readOnly={this.props.isReadonly} \r\n                    onChange={(event) => this.setState({name: event.target.value})}></textarea>\r\n                <div className=\"eventEditModalLabel\">Event Date:</div>\r\n                <textarea id=\"inputdate\" className=\"eventEditModalInput\" \r\n                    rows={1} defaultValue={this.props.defaultDate} \r\n                    style={this.props.isReadonly ? {border:\"2px solid darkgrey\"}:{border:\"2px solid grey\"}} \r\n                    readOnly={this.props.isReadonly}\r\n                    onChange={(event) => this.setState({date: event.target.value})}></textarea>\r\n                <div className=\"eventEditModalLabel\">Event Url:</div>\r\n                <textarea id=\"inputurl\" className=\"eventEditModalInput\" \r\n                    rows={6} defaultValue={this.props.defaultUrl} \r\n                    style={this.props.isReadonly ? {border:\"2px solid darkgrey\"}:{border:\"2px solid grey\"}} \r\n                    readOnly={this.props.isReadonly}\r\n                    onChange={(event) => this.setState({url: event.target.value})}></textarea>\r\n                <div className=\"eventEditModalLabel\">Event Id:</div>\r\n                <input id=\"inputkey\" className=\"eventEditModalInput\" \r\n                    defaultValue={this.props.defaultId} \r\n                    style={this.props.isReadonly ? {border:\"2px solid darkgrey\"}:{border:\"2px solid grey\"}} \r\n                    readOnly={true}\r\n                    onChange={()=>{}}></input>\r\n                {!this.props.isReadonly && this.state.showMsg ? <div className=\"eventEditModalMsg\">Please enter all fields!</div>: null}\r\n                {this.props.isReadonly ? null : <div className=\"eventEditButton\" onClick={this.onSubmit}>{this.props.buttonText}</div>}\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nexport default EventEdit;","import React from \"react\";\r\nimport \"./Modal.css\"\r\n\r\nclass Modal extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"modal display-block\">\r\n                <section className=\"modal-main\">\r\n                    {this.props.children}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","class Crypto{\r\n    key: CryptoKey | null = null;\r\n    encoder: TextEncoder | null = null;\r\n    decoder: TextDecoder | null = null;\r\n    password: string;\r\n    constructor(password: string){\r\n        this.password = password;\r\n    }\r\n\r\n    \r\n    private _getKey = async () => {\r\n        if (this.key == null) {\r\n            this.key = await this._getKeyFromPassword(this.password);\r\n        }\r\n        return this.key;\r\n    }\r\n\r\n    private _getKeyFromPassword = async (password: string) => {\r\n        const hash = \"SHA-256\";\r\n        const iterations = 1000;\r\n        const salt = \"Some random salt content\";\r\n        const baseKey = await window.crypto.subtle.importKey(\r\n            \"raw\",\r\n            this._stringToArrayBuffer(password),\r\n            {\"name\": \"PBKDF2\"},\r\n            false,\r\n            [\"deriveKey\"]\r\n        );\r\n        const aesKey = await window.crypto.subtle.deriveKey(\r\n            {\r\n                \"name\": \"PBKDF2\",\r\n                \"salt\": this._stringToArrayBuffer(salt),\r\n                \"iterations\": iterations,\r\n                \"hash\": hash\r\n            },\r\n            baseKey,\r\n            {\"name\": \"AES-CBC\", \"length\": 128}, \r\n            false,                               \r\n            [\"encrypt\", \"decrypt\"] \r\n        );\r\n        return aesKey;\r\n    }\r\n\r\n    private _stringToArrayBuffer = (message : string) => {\r\n        if (this.encoder == null){\r\n            this.encoder = new TextEncoder();\r\n        }\r\n        return this.encoder.encode(message);\r\n    }\r\n\r\n    private _ArrayBufferTostring = (buffer: ArrayBuffer) => {\r\n        if (this.decoder == null){\r\n            this.decoder = new TextDecoder()\r\n        }\r\n        return this.decoder.decode(buffer);\r\n    }\r\n\r\n    private _Uint8stringToArrayBuffer(enc_str: string){\r\n        return new Uint8Array( enc_str.split(\":\").map((each) => Number(each)) ).buffer\r\n    }\r\n\r\n    encrypt = async (message: string) => {\r\n        const aesKey = await this._getKey()\r\n        const enc_msg = await window.crypto.subtle.encrypt(\r\n            {\r\n                name: \"AES-CBC\",\r\n                iv: new Uint8Array(16),\r\n            },\r\n            aesKey,\r\n            this._stringToArrayBuffer(message)\r\n        )\r\n        return (new Uint8Array(enc_msg).toString()).replaceAll(\",\",\":\");\r\n    }\r\n\r\n    decrypt = async (message: string) => {\r\n        const aesKey = await this._getKey();\r\n        const dec_msg = await window.crypto.subtle.decrypt(\r\n            {\r\n                name: \"AES-CBC\",\r\n                iv: new Uint8Array(16), \r\n            },\r\n            aesKey, \r\n            this._Uint8stringToArrayBuffer(message)\r\n        )\r\n        return this._ArrayBufferTostring(dec_msg);\r\n    }\r\n}\r\n\r\nexport default Crypto","class QRUtils{\r\n\r\n    private static _getEventType = (formUrl: string)=> {\r\n        if(formUrl.includes(\"prefilled-bags\")){\r\n            return \"cid\";\r\n        }\r\n        return \"default\";\r\n    }\r\n\r\n    static getQRPayload = (formUrl: string, eventName: string, key: string) => {\r\n        const type = QRUtils._getEventType(formUrl);\r\n        let url_components = formUrl.split(\"&\");\r\n        const urlRegExpResult = RegExp(/[\\s\\S]*viewform/).exec(url_components[0]);\r\n        let url = formUrl;\r\n        if(urlRegExpResult != null){\r\n            url = urlRegExpResult[0];\r\n            url = url.replace(\"viewform\",\"formResponse\");\r\n        }\r\n        let name = \"\", email=\"\", ts=\"\", bags = \"\";\r\n        let i = 1;\r\n        for (; i<url_components.length; i++){\r\n            let component = url_components[i]\r\n            if (component.includes(\"prefilled-name\")){\r\n                name = component.replace(\"=prefilled-name\",\"\");\r\n            } else if (component.includes(\"prefilled-email\")){\r\n                email = component.replace(\"=prefilled-email\",\"\");\r\n            } else if (component.includes(\"prefilled-signature\")){\r\n                ts = component.replace(\"=prefilled-signature\",\"\");\r\n            } else {\r\n                bags = component.replace(\"=prefilled-bags\",\"\");\r\n            }\r\n        }\r\n        let payLoad = {\r\n            \"event\": eventName,\r\n            \"type\": type,\r\n            \"key\": key,\r\n            \"url\": url,\r\n            \"name\": name,\r\n            \"email\": email,\r\n            \"signature\": ts\r\n        } as any;\r\n        if(type === \"cid\"){\r\n            payLoad[\"bags\"] = bags;\r\n        }\r\n        return JSON.stringify(payLoad);\r\n    };\r\n}\r\n\r\nexport default QRUtils;","import React from \"react\";\r\nimport { QRCode } from \"react-qr-svg\";\r\nimport \"./QR.css\";\r\nimport {homepage} from \"../../../package.json\";\r\nimport Crypto from '../../utils/CryptoUtils';\r\nimport QRUtils from \"../../utils/QRUtils\";\r\n\r\ninterface QRState{\r\n    time: string;\r\n    isLoading: boolean;\r\n    qrvalue: string;\r\n    cipher: Crypto;\r\n}\r\n\r\ninterface QRProps{\r\n    eventName: string;\r\n    formUrl: string;\r\n    eventkey: string;\r\n}\r\n\r\nclass QR extends React.Component<QRProps, QRState>{\r\n    callbackID: NodeJS.Timeout | undefined\r\n\r\n    constructor(props: QRProps, state: QRState){\r\n        super(props, state);\r\n        this.state = {\r\n            time: new Date().toLocaleString(),\r\n            isLoading: true,\r\n            qrvalue: \"\",\r\n            cipher: new Crypto(this.props.eventkey)\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.callbackID = setInterval(()=>{\r\n            this.refreshQR();\r\n        },1000)\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        if (this.callbackID) {\r\n            clearInterval(this.callbackID);\r\n        }\r\n    }\r\n\r\n    refreshQR = async () => {\r\n        const datetime = new Date();\r\n        const signature = await this.state.cipher.encrypt(datetime.toLocaleString(\"en-IN\", {\"hour12\": false}));\r\n        const QRpayload = QRUtils.getQRPayload(this.props.formUrl, this.props.eventName, signature);\r\n        this.setState({\r\n            isLoading: false,\r\n            qrvalue: QRpayload,\r\n            time: datetime.toLocaleString()\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"QRComponent\">\r\n                <img alt=\"NSS IITH Logo\" className=\"bannerSmall\" style={{width: 300}} src={homepage+\"/bannerSmall.jpg\"}></img>\r\n                <div className=\"eventName\">{\"Event: \" + this.props.eventName}</div>\r\n                <div className=\"QRIcon\">\r\n                    {this.state.isLoading ? null : <QRCode \r\n                        level={\"H\"} className=\"QRCodeImg\"\r\n                        value={this.state.qrvalue}\r\n                    />}\r\n                    <div className=\"bannerNSS\">\r\n                        <img alt=\"NSS IITH Logo\" style={{ width:\"100%\", marginLeft: 20}} src={homepage+\"/bannerNSS.jpg\"}></img>\r\n                    </div>\r\n                </div>\r\n                {this.state.isLoading ? <div className=\"QRLoading\">Loading...</div> : <p className=\"eventTime\">{\"Date and Time: \" + this.state.time}</p>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QR;","import React from \"react\";\r\nimport EventEdit from \"../event_edit/EventEdit\";\r\nimport Modal from \"../modal/Modal\";\r\nimport \"./EventView.css\";\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport {IoArrowBack} from 'react-icons/io5';\r\nimport QR from \"../qr/QR\";\r\n\r\ninterface EventState{\r\n    showInfo: boolean;\r\n    isEditable: boolean;\r\n    showQR: boolean;\r\n}\r\n\r\ninterface EventProps{\r\n    name: string;\r\n    url: string;\r\n    eventKey: string;\r\n    date: string;\r\n    eventId: string;\r\n    onEdit: Function;\r\n}\r\n\r\nclass EventView extends React.Component<EventProps, EventState>{\r\n    constructor(props: EventProps, state: EventState){\r\n        super(props,state);\r\n        this.state = {\r\n            showInfo: false,\r\n            isEditable: false,\r\n            showQR: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const query_params = window.location.search;\r\n        if (query_params !== \"\"){\r\n            if (query_params.includes(this.props.eventId)){\r\n                this.setState({\r\n                    showQR: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleModalState = () => {\r\n        this.setState({\r\n            showInfo: !this.state.showInfo,\r\n            isEditable: false,\r\n            showQR: false\r\n        });\r\n    }\r\n\r\n    toggleModalEditState = () => {\r\n        this.setState({\r\n            isEditable: !this.state.isEditable\r\n        });\r\n    }\r\n\r\n    onEdit = (name: string, date: string, url: string, eventkey: string, eventId: string) => {\r\n        this.props.onEdit(name, date, url, eventkey, eventId);\r\n        this.toggleModalState();\r\n    }\r\n\r\n    toggleShowQR = () =>{\r\n        if (this.state.showQR === false){\r\n            window.history.replaceState({\"qr\":this.props.eventId}, \"\", \"?qr=\"+this.props.eventId)\r\n        }\r\n        else{\r\n            const url = new URL(window.location.href);\r\n            url.searchParams.delete(\"qr\");\r\n            window.history.replaceState({}, \"\", url.href);\r\n        }\r\n        this.setState({\r\n            showQR: !this.state.showQR\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.eventKey}>\r\n                {this.state.showInfo ? <Modal>\r\n                    <div className=\"eventViewModalClose\" >\r\n                        <CgCloseO color=\"darkred\" size={27} onClick={this.toggleModalState}/>\r\n                        {this.state.isEditable? <IoArrowBack color=\"darkblue\" size={27} onClick={this.toggleModalEditState}/> : null}\r\n                    </div>\r\n                    <EventEdit key={this.props.url+this.props.name+this.props.eventKey} defaultName={this.props.name} \r\n                        defaultDate={this.props.date} defaultUrl={this.props.url} defaultKey={this.props.eventKey}\r\n                        defaultId = {this.props.eventId} onSubmit={this.onEdit} buttonText=\"Save\" \r\n                        isReadonly={!this.state.isEditable}\r\n                    />\r\n                    {this.state.isEditable ? null : <div className=\"eventViewButtonRow\">\r\n                        <div className=\"eventViewButton\" onClick={this.toggleModalEditState}>Edit</div>\r\n                        <div className=\"eventViewButton\" onClick={this.toggleShowQR}>QR Code</div>\r\n                    </div>}\r\n                </Modal> : null}\r\n                {this.state.showQR ? <Modal>\r\n                    <div className=\"eventViewQRBox\">\r\n                        <CgCloseO className=\"eventViewQRClose\" size={30} color=\"darkred\" onClick={this.toggleShowQR}/>\r\n                        <QR key={this.props.eventKey+this.props.name+this.props.url} eventName={this.props.name} formUrl={this.props.url} eventkey={this.props.eventKey}/>\r\n                    </div>\r\n                </Modal> : null}\r\n                <div className=\"eventViewBox\" onClick={this.toggleModalState}>\r\n                    <p className=\"eventViewTitle\" onClick={this.toggleModalState}>{this.props.name}</p>\r\n                    <p className=\"eventViewDate\" onClick={this.toggleModalState}>{this.props.date}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventView;","import React from \"react\";\r\nimport { FirebaseUtils } from \"../../utils/FirebaseUtils\";\r\nimport EventView from \"../event_view/EventView\";\r\nimport './EventsRecord.css';\r\nimport {CgAdd, CgCloseO} from \"react-icons/cg\";\r\nimport EventEdit from \"../event_edit/EventEdit\";\r\nimport Modal from \"../modal/Modal\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {homepage} from \"../../../package.json\";\r\n\r\ninterface EventModel{\r\n    name: string;\r\n    url: string;\r\n    date: string;\r\n    eventkey: string;\r\n    eventId: string;\r\n}\r\n\r\ninterface EventsRecordState{\r\n    events: EventModel[];\r\n    isLoading: boolean;\r\n    createNew: boolean;\r\n}\r\n\r\ninterface EventsRecordProps{}\r\n\r\nclass EventsRecord extends React.Component<EventsRecordProps, EventsRecordState>{\r\n    constructor(props: EventsRecordProps, state: EventsRecordState){\r\n        super(props, state);\r\n        this.state = {\r\n            events: [],\r\n            isLoading: true,\r\n            createNew: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const body = await FirebaseUtils.getPageData(\"events\") as {details: EventModel[]};\r\n        this.setState({\r\n            events: body.details,\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onCreate = (name: string, date: string, url: string, eventkey: string, eventId: string)  => {\r\n        const newEvent: EventModel = {\r\n            name: name,\r\n            date: date,\r\n            url: url,\r\n            eventkey: eventkey,\r\n            eventId: eventId\r\n        }\r\n        this.state.events.unshift(newEvent);\r\n        FirebaseUtils.saveChanges(\"events\",{\"details\": this.state.events});\r\n        this.setState({\r\n            createNew: false\r\n        });\r\n    }\r\n\r\n    onEdit = (index: number, name: string, date: string, url: string, eventkey: string, eventId: string) => {\r\n        const newEvent: EventModel = {\r\n            name,\r\n            date,\r\n            url,\r\n            eventkey,\r\n            eventId\r\n        }\r\n        const newEvents = this.state.events.map((val) => JSON.parse(JSON.stringify(val)))\r\n        newEvents[index] = newEvent\r\n        this.setState({\r\n            events: newEvents\r\n        });\r\n        FirebaseUtils.saveChanges(\"events\",{\"details\": newEvents});\r\n    }\r\n\r\n    getRandomKey = ():string => {\r\n        return uuidv4();\r\n    }\r\n\r\n    getNewId = ():string => {\r\n        let ts = new Date();\r\n        const months = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\r\n        return ts.getDate() + \"-\" + months[ts.getMonth()] + \"-\" + ts.getFullYear() + \"-\" + ts.getHours() + \"-\" + ts.getMinutes() + \"-\" + ts.getSeconds()\r\n    }\r\n\r\n    toggleCreateNew = () =>{\r\n        this.setState({\r\n            createNew: !this.state.createNew\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"eventsRecordPage\">\r\n                {this.state.createNew ? <Modal>\r\n                    <div className=\"eventsRecordCreateNew\">\r\n                        <CgCloseO color=\"darkred\" size={27} style={{alignSelf:\"flex-end\", marginRight:\"10px\", marginTop:\"5px\"}} onClick={this.toggleCreateNew}/>\r\n                        <EventEdit key={this.getRandomKey()} defaultDate=\"\" defaultName=\"\" \r\n                            defaultUrl=\"\" defaultKey={this.getRandomKey()} defaultId={this.getNewId()}\r\n                            buttonText=\"Create\" isReadonly={false} \r\n                            onSubmit={this.onCreate}\r\n                        />\r\n                    </div>\r\n                </Modal> : null}\r\n                <div className=\"eventsRecordTitle\">\r\n                    <img alt=\"NSS IITH Logo\" style={{width: 320, marginTop: 15}} src={homepage+\"/bannerSmall.jpg\"} height={79} width={320}/>\r\n                    <div className=\"eventsRecordHeadRow\">\r\n                        <div className=\"eventsRecordHeading\">Events Record</div>\r\n                        <div className=\"eventsRecordAddNew\" onClick={this.toggleCreateNew}>\r\n                            <CgAdd className=\"eventsRecordAddNewIcon\" size={22}/>\r\n                            <div className=\"eventsRecordAddNewTitle\">Add New Event</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"eventsRecordGrid\">\r\n                    {this.state.isLoading ? <div className=\"eventsRecordLoadingMessage\">\r\n                        Loading please wait...\r\n                    </div>: this.state.events.map( (value, index) => <EventView key={value.eventId}\r\n                            name={value.name} date={value.date} url={value.url} eventKey={value.eventkey} eventId={value.eventId}\r\n                            onEdit={(name: string, date: string, \r\n                                url: string, eventkey: string, eventId: string) => this.onEdit(index, name, date, url, eventkey, eventId)}/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventsRecord;","import './App.css';\r\nimport React from 'react';\r\nimport Login from './components/login/Login';\r\nimport EventsRecord from './components/events_record/EventsRecord';\r\n\r\ninterface AppState{\r\n  isValidUserLoggedIn: boolean;\r\n}\r\n\r\ninterface AppProps{}\r\n\r\nclass App extends React.Component<AppProps, AppState>{\r\n  constructor(props: AppProps, state: AppState){\r\n    super(props,state);\r\n    this.state = {\r\n      isValidUserLoggedIn: (sessionStorage.getItem(\"isValidUserLoggedIn\") == null) ? false : true\r\n    }\r\n  }\r\n\r\n  onLoggedIn = () => {\r\n    this.setState({\r\n      isValidUserLoggedIn: true\r\n    });\r\n  }\r\n\r\n  onLoggedOut = () => {\r\n    this.setState({\r\n      isValidUserLoggedIn: false\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {\r\n            this.state.isValidUserLoggedIn ? <EventsRecord /> : <Login \r\n              onLoginSuccess={this.onLoggedIn}\r\n              onLogOut={this.onLoggedOut}\r\n            />\r\n          }\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorkerRegistration.register();\r\nreportWebVitals();\r\n"],"sourceRoot":""}