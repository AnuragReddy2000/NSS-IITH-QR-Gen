{"version":3,"sources":["utils/FirebaseConfig.ts","utils/FirebaseUtils.ts","components/login/Login.tsx","components/event_edit/EventEdit.tsx","components/modal/Modal.tsx","utils/QRUtils.ts","components/qr/QR.tsx","components/event_view/EventView.tsx","components/events_record/EventsRecord.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseUtils","getFirebaseApp","window","firebase","apps","length","initializeApp","getUser","app","auth","currentUser","displayName","email","isUserLoggedin","isValidTeamMember","a","getPageData","page","output","db","firestore","collection","doc","get","data","login","callback","onFail","provider","GoogleAuthProvider","signInWithPopup","then","result","catch","error","alert","logout","signOut","saveChanges","currentPage","page_data","set","Login","props","state","showMessage","message","setState","showMsg","msg","isLoggedIn","isValidUser","onLogOut","console","log","onLoginSuccess","this","style","display","flexDirection","justifyContent","alignItems","height","width","className","alt","src","label","onClick","React","Component","EventEdit","onSubmit","name","date","url","eventkey","defaultName","defaultDate","defaultUrl","defaultKey","id","cols","rows","defaultValue","isReadonly","border","readOnly","onChange","event","target","value","buttonText","Modal","showHideClassName","showModal","children","QRUtils","QrKeyGen","formUrl","eventName","key","type","getEventType","urlRegExpResult","RegExp","exec","replace","nameRegExpResult","emailRegExpResult","bags","bagsRegExpResult","payLoad","JSON","stringify","includes","getKey","timestamp","crypto","Cryptr","datetime","Date","encrypt","toLocaleString","getRandomKey","uuidv4","QR","time","isLoading","qrvalue","Promise","res","setTimeout","currentKey","newQRvalue","callbackID","setInterval","clearInterval","level","marginLeft","EventView","toggleModalState","showInfo","isEditable","showQR","toggleModalEditState","onEdit","toggleShowQR","eventKey","color","size","EventsRecord","onCreate","newEvent","events","unshift","createNew","index","newEvents","map","val","parse","toggleCreateNew","body","details","alignSelf","marginRight","marginTop","App","onLoggedIn","isValidUserLoggedIn","onLoggedOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ac25480.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: \"AIzaSyBe7MCEn-_5jNAd286deOqEk8jvxvNX1aw\",\r\n    authDomain: \"nss-iith-app.firebaseapp.com\",\r\n    projectId: \"nss-iith-app\",\r\n    storageBucket: \"nss-iith-app.appspot.com\",\r\n    messagingSenderId: \"406717518600\",\r\n    appId: \"1:406717518600:web:169bf354467b164f03d2bd\",\r\n    measurementId: \"G-L793C8VNSX\"\r\n};\r\n\r\nexport default firebaseConfig;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport firebaseConfig from \"./FirebaseConfig\";\r\n\r\nexport class FirebaseUtils {\r\n\r\n    private static getFirebaseApp = () => {\r\n        if(typeof window !== 'undefined'){\r\n            return firebase.apps.length ? firebase.apps[0] : firebase.initializeApp(firebaseConfig); \r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static getUser = () => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        return {\"name\": app?.auth().currentUser?.displayName, \"email\": app?.auth().currentUser?.email};\r\n    }\r\n    \r\n    public static isUserLoggedin = (): boolean => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        return app?.auth().currentUser != null;\r\n    }\r\n\r\n    public static isValidTeamMember = async ():Promise<boolean> => {\r\n        try{\r\n            const result = await FirebaseUtils.getPageData(\"access_list\");\r\n            if(result !== {}){\r\n                return true;\r\n            }\r\n        }\r\n        catch{\r\n            return false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static getPageData = async (page: string):Promise<any> => {\r\n        let output: any = {};\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        const db = app?.firestore().collection(\"event_records\");\r\n        const data = await db?.doc(page).get();\r\n        output = (data) ? data.data() : {};\r\n        return output;\r\n    }\r\n\r\n    public static login = (callback:()=>void, onFail:()=>void) => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        let provider = new firebase.auth.GoogleAuthProvider();\r\n        app?.auth().signInWithPopup(provider).then(function(result) {\r\n            callback();\r\n        }).catch(function(error) {\r\n            alert(error);\r\n            onFail();\r\n        });\r\n    }\r\n\r\n    public static logout = (callback:()=>void) => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        app?.auth().signOut().then(function(result){\r\n            callback();\r\n        }).catch(function(error){alert(\"Oops... failed to logout\")});\r\n    }\r\n\r\n    public static saveChanges = (currentPage:string, page_data:Object) => {\r\n        const app = FirebaseUtils.getFirebaseApp();\r\n        app?.firestore().collection('event_records').doc(currentPage).set(page_data).then(function(result){\r\n            alert(\"Sucessfully saved to database. Thank you!\");\r\n        }).catch(function(error){\r\n            alert(\"Oops... Sorry, unable to save changes. This might have happened because, \\n i) You may not have the edit access to the data \\n ii) You may not have a stable network\");\r\n        })\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport GoogleButton from 'react-google-button'\r\nimport { FirebaseUtils } from \"../../utils/FirebaseUtils\";\r\nimport \"./Login.css\";\r\n\r\ninterface LoginState{\r\n    isLoggedIn: boolean,\r\n    isValidUser: boolean,\r\n    showMsg: boolean;\r\n    msg: string;\r\n}\r\n\r\ninterface LoginProps{\r\n    onLoginSuccess: Function;\r\n    onLogOut: Function;\r\n}\r\n\r\nclass Login extends React.Component<LoginProps,LoginState>{\r\n    constructor(props: LoginProps, state: LoginState){\r\n        super(props,state);\r\n        this.state = {\r\n            isLoggedIn: FirebaseUtils.isUserLoggedin(),\r\n            isValidUser: false,\r\n            showMsg: FirebaseUtils.isUserLoggedin(),\r\n            msg: \"Currently logged in as \" + FirebaseUtils.getUser().email + \". Verifying access level, Please wait!\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(this.state.isLoggedIn && !this.state.isValidUser){\r\n            const result = await FirebaseUtils.isValidTeamMember();\r\n            if(result){\r\n                this.setState({\r\n                    isValidUser: true,\r\n                    showMsg: true,\r\n                    msg: \"Login and verification success! Please wait...\"\r\n                });\r\n                this.props.onLoginSuccess();\r\n            }\r\n            else{\r\n                this.showMessage(\"Sorry... You do not have access to this page!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    showMessage = (message: string) => {\r\n        this.setState({\r\n            showMsg: true,\r\n            msg: message\r\n        });\r\n    }\r\n\r\n    logout = async () => {\r\n        this.showMessage(\"Please wait...\");\r\n        FirebaseUtils.logout(() => {\r\n            this.setState({\r\n                isLoggedIn: false,\r\n                isValidUser: false,\r\n                showMsg: true,\r\n                msg: \"Logged out!\"\r\n            });\r\n            this.props.onLogOut();\r\n        });\r\n    }\r\n\r\n    login = async () => {\r\n        FirebaseUtils.login(\r\n            async () => {\r\n                this.setState({\r\n                    isLoggedIn: true,\r\n                    showMsg: true,\r\n                    msg: \"Verifying... Please wait...\"\r\n                });\r\n                const result = await FirebaseUtils.isValidTeamMember();\r\n                console.log(result);\r\n                if(result){\r\n                    this.setState({\r\n                        showMsg: true,\r\n                        msg: \"Login and verification success! Please wait...\"\r\n                    });\r\n                    this.props.onLoginSuccess();\r\n                }\r\n                else{\r\n                    this.showMessage(\"Sorry... You do not have access to this page!\");\r\n                }\r\n            },\r\n            () => {\r\n                this.showMessage(\"Oops... login failed. Please check your network connection\")\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\",height:\"100vh\", width:\"100%\"}}>\r\n                <div className=\"loginComponent\">\r\n                    <img alt=\"NSS IITH Logo\" src={\"/bannerNSS.jpg\"} style={{width: 300}}/>\r\n                    <p className=\"loginTitle\">QR Generator</p>\r\n                    {this.state.isLoggedIn ? <GoogleButton label=\"Log out\" onClick={this.logout}/> : <GoogleButton onClick={this.login}/>}\r\n                    {this.state.showMsg ? <p className=\"loginErrorMsg\">{this.state.msg}</p> : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport \"./EventEdit.css\"\r\n\r\ninterface EventEditProps{\r\n    defaultName: string;\r\n    defaultUrl: string;\r\n    defaultDate: string;\r\n    defaultKey: string;\r\n    buttonText: string;\r\n    onSubmit: Function;\r\n    isReadonly: boolean;\r\n}\r\n\r\ninterface EventEditState{\r\n    name: string;\r\n    url: string;\r\n    date: string;\r\n    eventkey: string;\r\n}\r\n\r\nclass EventEdit extends React.Component<EventEditProps, EventEditState>{\r\n    constructor(props: EventEditProps, state: EventEditState){\r\n        super(props, state);\r\n        this.state = {\r\n            name: this.props.defaultName,\r\n            date: this.props.defaultDate,\r\n            url: this.props.defaultUrl,\r\n            eventkey: this.props.defaultKey\r\n        }\r\n    }\r\n\r\n    onSubmit = () => {\r\n        this.props.onSubmit(this.state.name, this.state.date, this.state.url, this.state.eventkey);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"eventEditModal\" id={this.props.defaultKey}>\r\n                <div className=\"eventEditModalLabel\">Event Name:</div>\r\n                <textarea id=\"inputname\" className=\"eventEditModalInput\" \r\n                    cols={35} rows={1} defaultValue={this.props.defaultName} \r\n                    style={this.props.isReadonly ? {border:\"2px solid darkgrey\"}:{border:\"2px solid grey\"}} \r\n                    readOnly={this.props.isReadonly} \r\n                    onChange={(event) => this.setState({name: event.target.value})}></textarea>\r\n                <div className=\"eventEditModalLabel\">Event Date:</div>\r\n                <textarea id=\"inputdate\" className=\"eventEditModalInput\" \r\n                    cols={35} rows={1} defaultValue={this.props.defaultDate} \r\n                    style={this.props.isReadonly ? {border:\"2px solid darkgrey\"}:{border:\"2px solid grey\"}} \r\n                    readOnly={this.props.isReadonly}\r\n                    onChange={(event) => this.setState({date: event.target.value})}></textarea>\r\n                <div className=\"eventEditModalLabel\">Event Url:</div>\r\n                <textarea id=\"inputurl\" className=\"eventEditModalInput\" \r\n                    cols={35} rows={5} defaultValue={this.props.defaultUrl} \r\n                    style={this.props.isReadonly ? {border:\"2px solid darkgrey\"}:{border:\"2px solid grey\"}} \r\n                    readOnly={this.props.isReadonly}\r\n                    onChange={(event) => this.setState({url: event.target.value})}></textarea>\r\n                <div className=\"eventEditModalLabel\">Event Key:</div>\r\n                <textarea id=\"inputkey\" className=\"eventEditModalInput\" \r\n                    cols={35} rows={2} defaultValue={this.props.defaultKey} \r\n                    style={this.props.isReadonly ? {border:\"2px solid darkgrey\"}:{border:\"2px solid grey\"}} \r\n                    readOnly={this.props.isReadonly}\r\n                    onChange={(event) => this.setState({eventkey: event.target.value})}></textarea>\r\n                {this.props.isReadonly ? null : <div className=\"eventEditButton\" onClick={this.onSubmit}>{this.props.buttonText}</div>}\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nexport default EventEdit;","import React from \"react\";\r\nimport \"./Modal.css\"\r\n\r\ninterface ModalProps{\r\n    showModal: boolean;\r\n}\r\n\r\nclass Modal extends React.Component<ModalProps>{\r\n\r\n    render(){\r\n        const showHideClassName = this.props.showModal ? \"modal display-block\" : \"modal display-none\";\r\n        return(\r\n            <div className={showHideClassName}>\r\n                <section className=\"modal-main\">\r\n                    {this.props.children}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import Cryptr from \"cryptr\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass QRUtils{\r\n\r\n    static QrKeyGen = (formUrl: string, eventName: string, key: string): string => {\r\n        const type = QRUtils.getEventType(formUrl);\r\n        const urlRegExpResult = RegExp(/[\\s\\S]*viewform/).exec(formUrl);\r\n        let url: string = formUrl;\r\n        if(urlRegExpResult != null){\r\n            url = urlRegExpResult[0];\r\n            url = url.replace(\"viewform\",\"formResponse\");\r\n        }\r\n        let name: string = \"\";\r\n        const nameRegExpResult = RegExp(/&[\\s\\S]*prefilled-name/).exec(formUrl);\r\n        if(nameRegExpResult != null){\r\n            name = nameRegExpResult[0];\r\n            name = name.replace(\"=prefilled-name\",\"\");\r\n            name = name.replace(\"&\",\"\");\r\n        }\r\n        let email: string = \"\";\r\n        const emailRegExpResult = RegExp(/&[\\s\\S]*prefilled-email/).exec(formUrl);\r\n        if(emailRegExpResult != null){\r\n            email = emailRegExpResult[0];\r\n            email = email.replace(\"=prefilled-email\",\"\");\r\n            email = email.replace(\"&\",\"\");\r\n        }\r\n        let bags: string = \"\";\r\n        if(type === \"cid\"){\r\n            const bagsRegExpResult = RegExp(/&[\\s\\S]*prefilled-bags/).exec(formUrl);\r\n            if(bagsRegExpResult != null){\r\n                bags = bagsRegExpResult[0];\r\n                bags = bags.replace(\"=prefilled-bags\",\"\");\r\n                bags = bags.replace(\"&\",\"\");\r\n            }\r\n        }\r\n        var payLoad: Object = {\r\n            \"event\": eventName,\r\n            \"type\": type,\r\n            \"key\": key,\r\n            \"url\": url,\r\n            \"name\": name,\r\n            \"email\": email\r\n        };;\r\n        if(type === \"cid\"){\r\n            payLoad = {\r\n                \"event\": eventName,\r\n                \"type\": type,\r\n                \"key\": key,\r\n                \"url\": url,\r\n                \"name\": name,\r\n                \"email\": email,\r\n                \"bags\": bags\r\n            };\r\n        }\r\n        return JSON.stringify(payLoad);\r\n    }\r\n\r\n    static getEventType = (formUrl: string): string => {\r\n        if(formUrl.includes(\"prefilled-bags\")){\r\n            return \"cid\";\r\n        }\r\n        return \"default\";\r\n    }\r\n\r\n    static getKey = (key: string, timestamp: string): string => {\r\n        const crypto = new Cryptr(key);\r\n        const datetime = new Date();\r\n        return crypto.encrypt(datetime.toLocaleString());\r\n    }\r\n\r\n    static getRandomKey = ():string => {\r\n        return uuidv4();\r\n    }\r\n}\r\n\r\nexport default QRUtils;\r\n","import React from \"react\";\r\nimport { QRCode } from \"react-qr-svg\";\r\nimport QRUtils from \"../../utils/QRUtils\";\r\nimport \"./QR.css\";\r\n\r\ninterface QRState{\r\n    time: string;\r\n    isLoading: boolean;\r\n    qrvalue: string;\r\n}\r\n\r\ninterface QRProps{\r\n    eventName: string;\r\n    formUrl: string;\r\n    eventkey: string;\r\n}\r\n\r\nclass QR extends React.Component<QRProps, QRState>{\r\n    static callbackID: NodeJS.Timeout\r\n    constructor(props: QRProps, state: QRState){\r\n        super(props, state);\r\n        this.state = {\r\n            time: new Date().toLocaleString(),\r\n            isLoading: true,\r\n            qrvalue: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await new Promise(res => setTimeout(res, 700));\r\n        const currentKey = QRUtils.getKey(this.props.eventkey, this.state.time);\r\n        const newQRvalue = QRUtils.QrKeyGen(\r\n            this.props.formUrl, \r\n            this.props.eventName, \r\n            currentKey,\r\n        );\r\n        this.setState({\r\n            isLoading:false,\r\n            qrvalue: newQRvalue,\r\n        })\r\n        QR.callbackID =  setInterval(() => {\r\n            const currentKey = QRUtils.getKey(this.props.eventkey, this.state.time);\r\n            const newQRvalue = QRUtils.QrKeyGen(\r\n                this.props.formUrl, \r\n                this.props.eventName, \r\n                currentKey,\r\n            );\r\n            this.setState({\r\n                time: new Date().toLocaleString(),\r\n                qrvalue: newQRvalue\r\n            });\r\n        }, 2000);\r\n    }\r\n\r\n    async componentWillUnmount(){\r\n        clearInterval(QR.callbackID);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"QRComponent\">\r\n                <img alt=\"NSS IITH Logo\" className=\"bannerSmall\" style={{width: 300}} src={\"/bannerSmall.jpg\"}></img>\r\n                <div className=\"eventName\">{\"Current event: \" + this.props.eventName}</div>\r\n                <div className=\"QRIcon\">\r\n                    {this.state.isLoading ? null : <QRCode \r\n                        level={\"H\"} \r\n                        style={{width: 300}} \r\n                        value={this.state.qrvalue}\r\n                    />}\r\n                    <img alt=\"NSS IITH Logo\" className=\"bannerNSS\" style={{width: 300, marginLeft: 20}} src={\"/bannerNSS.jpg\"}></img>\r\n                </div>\r\n                {this.state.isLoading ? <div className=\"QRLoading\">Loading...</div> : null}\r\n                <p className=\"eventTime\">{\"Current Date and Time: \" + this.state.time}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QR;","import React from \"react\";\r\nimport EventEdit from \"../event_edit/EventEdit\";\r\nimport Modal from \"../modal/Modal\";\r\nimport \"./EventView.css\";\r\nimport { CgCloseO } from 'react-icons/cg';\r\nimport {IoArrowBack} from 'react-icons/io5';\r\nimport QR from \"../qr/QR\";\r\n\r\ninterface EventState{\r\n    showInfo: boolean;\r\n    isEditable: boolean;\r\n    showQR: boolean;\r\n}\r\n\r\ninterface EventProps{\r\n    name: string;\r\n    url: string;\r\n    eventKey: string;\r\n    date: string;\r\n    onEdit: Function;\r\n}\r\n\r\nclass EventView extends React.Component<EventProps, EventState>{\r\n    constructor(props: EventProps, state: EventState){\r\n        super(props,state);\r\n        this.state = {\r\n            showInfo: false,\r\n            isEditable: false,\r\n            showQR: false\r\n        }\r\n    }\r\n\r\n    toggleModalState = () => {\r\n        this.setState({\r\n            showInfo: !this.state.showInfo,\r\n            isEditable: false,\r\n            showQR: false\r\n        });\r\n    }\r\n\r\n    toggleModalEditState = () => {\r\n        this.setState({\r\n            isEditable: !this.state.isEditable\r\n        });\r\n    }\r\n\r\n    onEdit = (name: string, date: string, url: string, eventkey: string) => {\r\n        this.props.onEdit(name, date, url, eventkey);\r\n        this.toggleModalState();\r\n    }\r\n\r\n    toggleShowQR = () =>{\r\n        console.log(\"toggling\");\r\n        this.setState({\r\n            showQR: !this.state.showQR\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id={this.props.eventKey}>\r\n                <Modal showModal={this.state.showInfo}>\r\n                    <div className=\"eventViewModalClose\" >\r\n                        <CgCloseO color=\"darkred\" onClick={this.toggleModalState}/>\r\n                        {this.state.isEditable? <IoArrowBack color=\"darkblue\" onClick={this.toggleModalEditState}/> : null}\r\n                    </div>\r\n                    <EventEdit key={this.props.url+this.props.name+this.props.eventKey} defaultName={this.props.name} \r\n                        defaultDate={this.props.date} defaultUrl={this.props.url} defaultKey={this.props.eventKey}\r\n                        onSubmit={this.onEdit} buttonText=\"Save\" isReadonly={!this.state.isEditable}\r\n                    />\r\n                    {this.state.isEditable ? null : <div className=\"eventViewButtonRow\">\r\n                        <div className=\"eventViewButton\" onClick={this.toggleModalEditState}>Edit</div>\r\n                        <div className=\"eventViewButton\" onClick={this.toggleShowQR}>QR Code</div>\r\n                    </div>}\r\n                </Modal>\r\n                {this.state.showQR ? <div className=\"eventViewQRBox\">\r\n                    <CgCloseO className=\"eventViewQRClose\" size={30} color=\"darkred\" onClick={this.toggleModalState}/>\r\n                    <QR key={this.props.eventKey+this.props.name+this.props.url} eventName={this.props.name} formUrl={this.props.url} eventkey={this.props.eventKey}/>\r\n                </div>: null}\r\n                <div className=\"eventViewBox\" onClick={this.toggleModalState}>\r\n                    <p className=\"eventViewTitle\" onClick={this.toggleModalState}>{this.props.name}</p>\r\n                    <p className=\"eventViewDate\" onClick={this.toggleModalState}>{this.props.date}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventView;","import React from \"react\";\r\nimport { FirebaseUtils } from \"../../utils/FirebaseUtils\";\r\nimport EventView from \"../event_view/EventView\";\r\nimport './EventsRecord.css';\r\nimport {CgAdd, CgCloseO} from \"react-icons/cg\";\r\nimport EventEdit from \"../event_edit/EventEdit\";\r\nimport QRUtils from \"../../utils/QRUtils\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\ninterface EventModel{\r\n    name: string;\r\n    url: string;\r\n    date: string;\r\n    eventkey: string;\r\n}\r\n\r\ninterface EventsRecordState{\r\n    events: EventModel[];\r\n    isLoading: boolean;\r\n    createNew: boolean;\r\n}\r\n\r\ninterface EventsRecordProps{}\r\n\r\nclass EventsRecord extends React.Component<EventsRecordProps, EventsRecordState>{\r\n    constructor(props: EventsRecordProps, state: EventsRecordState){\r\n        super(props, state);\r\n        this.state = {\r\n            events: [],\r\n            isLoading: true,\r\n            createNew: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const body = await FirebaseUtils.getPageData(\"events\") as {details: EventModel[]};\r\n        this.setState({\r\n            events: body.details,\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    onCreate = (name: string, date: string, url: string, eventkey: string)  => {\r\n        const newEvent: EventModel = {\r\n            name: name,\r\n            date: date,\r\n            url: url,\r\n            eventkey: eventkey\r\n        }\r\n        this.state.events.unshift(newEvent);\r\n        FirebaseUtils.saveChanges(\"events\",{\"details\": this.state.events});\r\n        this.setState({\r\n            createNew: false\r\n        });\r\n    }\r\n\r\n    onEdit = (index: number, name: string, date: string, url: string, eventkey: string) => {\r\n        const newEvent: EventModel = {\r\n            name,\r\n            date,\r\n            url,\r\n            eventkey\r\n        }\r\n        const newEvents = this.state.events.map((val) => JSON.parse(JSON.stringify(val)))\r\n        newEvents[index] = newEvent\r\n        this.setState({\r\n            events: newEvents\r\n        });\r\n        FirebaseUtils.saveChanges(\"events\",{\"details\": this.state.events});\r\n    }\r\n\r\n    toggleCreateNew = () =>{\r\n        this.setState({\r\n            createNew: !this.state.createNew\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"eventsRecordPage\">\r\n                <Modal showModal={this.state.createNew}>\r\n                    <div className=\"eventsRecordCreateNew\">\r\n                        <CgCloseO color=\"darkred\" style={{alignSelf:\"flex-end\", marginRight:\"10px\", marginTop:\"5px\"}} onClick={this.toggleCreateNew}/>\r\n                        <EventEdit defaultDate=\"\" defaultName=\"\" \r\n                            defaultUrl=\"\" defaultKey={QRUtils.getRandomKey()} \r\n                            buttonText=\"Create\" isReadonly={false} \r\n                            onSubmit={this.onCreate}\r\n                        />\r\n                    </div>\r\n                </Modal>\r\n                <div className=\"eventsRecordTitle\">\r\n                    <img alt=\"NSS IITH Logo\" style={{width: 320, marginTop: 15}} src=\"/bannerSmall.jpg\"/>\r\n                    <div className=\"eventsRecordHeadRow\">\r\n                        <div className=\"eventsRecordHeading\">Events Record</div>\r\n                        <div className=\"eventsRecordAddNew\" onClick={this.toggleCreateNew}>\r\n                            <CgAdd className=\"eventsRecordAddNewIcon\" size={22}/>\r\n                            <div className=\"eventsRecordAddNewTitle\">Add New Event</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"eventsRecordGrid\">\r\n                    {this.state.isLoading ? <div style={{color:\"black\"}}>\r\n                        Loading please wait...\r\n                    </div>: this.state.events.map( (value, index) => <EventView key={value.eventkey+value.url+value.name}\r\n                            name={value.name} date={value.date} url={value.url} eventKey={value.eventkey}\r\n                            onEdit={(name: string, date: string, \r\n                                url: string, eventkey: string) => this.onEdit(index, name, date, url, eventkey)}/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventsRecord;","import './App.css';\r\nimport React from 'react';\r\nimport Login from './components/login/Login';\r\nimport EventsRecord from './components/events_record/EventsRecord';\r\n\r\ninterface AppState{\r\n  isValidUserLoggedIn: boolean;\r\n}\r\n\r\ninterface AppProps{}\r\n\r\nclass App extends React.Component<AppProps, AppState>{\r\n  constructor(props: AppProps, state: AppState){\r\n    super(props,state);\r\n    this.state = {\r\n      isValidUserLoggedIn: false\r\n    }\r\n  }\r\n\r\n  onLoggedIn = () => {\r\n    this.setState({\r\n      isValidUserLoggedIn: true\r\n    });\r\n  }\r\n\r\n  onLoggedOut = () => {\r\n    this.setState({\r\n      isValidUserLoggedIn: false\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {\r\n            this.state.isValidUserLoggedIn ? <EventsRecord /> : <Login \r\n              onLoginSuccess={this.onLoggedIn}\r\n              onLogOut={this.onLoggedOut}\r\n            />\r\n          }\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}